DISPLAY MACRO VAR

	PUSH CX
	MOV ax, VAR
	MOV BX, 10     ;INITIALIZES DIVISOR
	MOV DX, 0000H    ;CLEARS DX
	MOV CX, 0000H    ;CLEARS CX
    
	;SPLITTING PROCESS STARTS HERE
	L1:
	MOV DX, 0000H    ;CLEARS DX DURING JUMP
	DIV BX      ;DIVIDES AX BY BX
	PUSH DX     ;PUSHES DX(REMAINDER) TO STACK
	INC CX      ;INCREMENTS COUNTER TO TRACK THE NUMBER OF DIGITS
	CMP AX, 0     ;CHECKS IF THERE IS STILL SOMETHING IN AX TO DIVIDE
	JNE L1     ;JUMPS IF AX IS NOT ZERO
    
	L2: 
	POP DX      ;POPS FROM STACK TO DX
	ADD DX, 30H     ;CONVERTS TO IT'S ASCII EQUIVALENT
	
	MOV AH, 02H     
	INT 21H      ;CALLS DOS TO DISPLAY CHARACTER
	LOOP L2    ;LOOPS TILL CX EQUALS ZERO

	POP CX
ENDM
.MODEL SMALL
.DATA
    N DW 10
	LIM DW 99
.CODE
    MOV AX, @DATA
    MOV DS, AX
 
    MOV SI, 0
    MOV CX, N
    
	CALC:
		CMP SI, LIM
		JG BRINGBACK
		DISPLAY SI

		MOV DL, ' '
		MOV AH, 02H
		INT 21H

		INC SI
		LOOP CALC

	JMP EOF
		
	BRINGBACK:
		MOV SI, 0
		JMP CALC
		
	EOF:
    MOV AH, 4CH
    INT 21H
    END
